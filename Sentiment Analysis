library(tm)         
library(SnowballC)  
library(dplyr)      
library(tidyr)      
library(stringr)    
library(tidytext)   
library(data.table)
library(textclean)
library(ggplot2)

tweets_df <- (updated_Twitter_data_December_2022)
setnames(tweets_df, "Twitter Screen Name...4", "username")
setnames(tweets_df, "Hit Sentence", "tweet")


tweets_df <-
  tweets_df %>% 
  mutate(tweet = str_remove_all(tweet, " ?(f|ht)(tp)(s?)(://)(.*)[.|/](.*)"),  
         tweet = str_replace_all(tweet, "&amp;", "and"),                       
         tweet = str_remove_all(tweet, "[[:punct:]]"),                         
         tweet = str_remove_all(tweet, "^RT:? "),                              
         tweet = str_remove_all(tweet, "@[[:alnum:]]+"),                       
         tweet = str_remove_all(tweet, "#[[:alnum:]]+"),                       
         tweet = str_replace_all(tweet, "\\\n", " "),                         
         tweet = str_to_lower(tweet),                                          
         tweet = str_trim(tweet, "both"),
         tweet = str_remove_all(tweet, "\\.\\.\\."),
         tweet = gsub("[^\x01-\x7F]", "", tweet))

tweets_df <-
  tweets_df %>% 
  mutate(username = str_remove_all(username, " ?(f|ht)(tp)(s?)(://)(.*)[.|/](.*)"),   
         username = str_replace_all(username, "&amp;", "and"),                       
         username = str_remove_all(username, "[[:punct:]]"),                         
         username = str_remove_all(username, "^RT:? "),                              
         username = str_remove_all(username, "@[[:alnum:]]+"),                       
         username = str_remove_all(username, "#[[:alnum:]]+"),                       
         username = str_replace_all(username, "\\\n", " "),                          
         username = str_to_lower(username),                                          
         username = str_trim(username, "both"),
         username = str_remove_all(username, "\\.\\.\\."),
         username = gsub("[^\x01-\x7F]", "", username))


cleaned_tweets_df <- tweets_df

corpus <- VCorpus(VectorSource(cleaned_tweets_df$tweet))

dtm <- DocumentTermMatrix(corpus)

dtm_df <- as.data.frame(as.matrix(dtm))
dtm_df$term <- rownames(dtm_df)

afinn <- get_sentiments("afinn")
nrc <- get_sentiments("nrc")

cleaned_tweets_df$id <- seq(1,nrow(cleaned_tweets_df),1)
tweet_sentiment_one <- cleaned_tweets_df %>% 
  unnest_tokens(word, tweet) %>% 
  inner_join(nrc, relationship="many-to-many") %>% 
  count(id, sentiment) %>% 
  pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>% 
  mutate(sentiment = positive - negative)

cleaned_tweets_df <- cleaned_tweets_df %>%
  mutate(row_id = row_number()) %>%  # Create a row identifier to join on
  full_join(tweet_sentiment_one, by = "id")

long_sentiments <- cleaned_tweets_df %>%
  pivot_longer(
    cols = c("anger", "anticipation", "fear", "joy", "sadness", "trust", "disgust", "surprise"),
    names_to = "sentiments",
    values_to = "count"
  )

print(long_sentiments)

dates <- ("Alternate Date Format")

daily_sentiment <- long_sentiments %>%
  group_by(dates, sentiments) %>%
  summarise(sentiment_count = sum(count), .groups = 'drop') %>%
  pivot_wider(names_from = sentiments, values_from = sentiment_count, values_fill = list(sentiment_count = 0))

long_daily_sentiment <- daily_sentiment %>%
  pivot_longer(cols = -`Alternate Date Format`, names_to = "sentiments", values_to = "count")

print(long_daily_sentiment)

ggplot(data = long_daily_sentiment, aes(x = Date, y = count, color = sentiments, group = sentiments)) +
  geom_line() +                      # For line plot
  geom_point() +                     # Add points for better visualization
  labs(title = "Sentiment Trends Over Time",
       x = "Date",
       y = "Sentiment Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x-axis labels for readability

ggplot(data = long_daily_sentiment, aes(x = Date, y = count, fill = sentiments)) +
  geom_bar(stat = "identity", position = "dodge") + # Dodge bars to separate them by sentiment
  labs(title = "Sentiment Counts by Date",
       x = "Date",
       y = "Sentiment Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x-axis labels for readability

long_daily_sentiment <- daily_sentiment %>%
  pivot_longer(cols = -Date, names_to = "sentiment", values_to = "count")

print(long_daily_sentiment)

ggplot(data = long_daily_sentiment, aes(x = Date, y = count, color = sentiments, group = sentiments)) +
  geom_line(size = 1.2) +                      # Add lines with a thicker size
  geom_point(size = 2) +                       # Add points for each data value
  labs(title = "Sentiment Trends Over Time",
       x = "Alternate Date Format",
       y = "Sentiment Count") +
  theme_minimal() +                            # Apply a minimal theme
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + # Rotate x-axis labels for readability
  scale_color_brewer(palette = "Set1")         # Use a color palette for better distinction
